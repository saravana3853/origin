# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build
        run: cd $GITHUB_WORKSPACE && mvn clean install
      
      - run: mkdir -p ~/artifacts/ && cp $GITHUB_WORKSPACE/target/origin-1.0-SNAPSHOT.jar ~/artifacts/
      
      - uses: actions/upload-artifact@v2
        with:
          # Runs a set of commands using the runners shell
          name: origin-server-${{ github.run_number }}
          path: ~/artifacts/origin-1.0-SNAPSHOT.jar
  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    env:
        REPO: ${{ secrets.DOCKER_REPO }}
    steps:
        - uses: actions/checkout@v2
        - name: Build
          run: cd $GITHUB_WORKSPACE && mvn clean install
        - name: Login to Docker Hub
          run: docker login -u ${{ secrets.DOCKER_USER }}
            -p ${{ secrets.DOCKER_PASS }}
        - name: Build Docker image
          run: cd $GITHUB_WORKSPACE && docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
        - name: Publish Docker image
          run: docker push $REPO
  deploy:
    name: Deploy - Heroku
    runs-on: ubuntu-latest
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd $GITHUB_WORKSPACE && mvn clean install
      - name: Build, Push and Release a Docker container to Heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}

          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          # (Optional, default: "./")
          # Dockerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

          # (Optional, default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          docker_options: "--no-cache"

          # (Optional, default: "web")
          # Select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web".
          # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web